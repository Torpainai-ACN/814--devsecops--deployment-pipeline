# This is a basic workflow to help you get started with Actions

name: reusable-workflow-init-postgres-deployment

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      deployment_date:
        type: string
        description: Deployment Date
        required: false
      environment:
        type: string
        description: Target environment
        required: true
      repository:
        type: string
        description: Repository full name
        required: true
      ref:
        type: string
        description: Branch/Tag name
        required: true
      baseline_no:
        type: string
        description: Deployment Baseline Number
        required: true

  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Target environment
        required: true
        options:
          - dev
          - sit
          - uat
          - prod
      repository:
        type: string
        description: Repository full name
        required: true
      ref:
        type: string
        description: Branch/Tag name
      baseline_no:
        type: string
        description: Deployment Baseline Number
        required: true

defaults:
  run:
    shell: bash
jobs:
  call-workflow-init-postgres-deployment:
    name: call-workflow-init-postgres-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch of DevSecOps repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.GHE_DEVOPS_REPOSITORY }}
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GHE_DEVOPS_TOKEN }}

      - name: Load environment variables from ${{ inputs.environment }} dotenv file
        run: |
          cat ./dotenv/${{ inputs.environment }}.env >> $GITHUB_ENV

      - name: Checkout ${{ inputs.ref }} of ${{ inputs.repository }} repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          token: ${{ secrets.GHE_DEVOPS_TOKEN }}
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Parse YAML and expand SQL files
        id: parse_sql
        run: |
          python3 <<EOF
          import yaml, glob, os

          with open("script/execute_init/${{inputs.baseline_no}}/execute_init.yml") as f:
              config = yaml.safe_load(f)

          ordered_sqls = []
          for category in config.get("scripts", {}):
              entries = config["scripts"][category]
              for entry in entries:
                  pattern = entry.get("path")
                  if pattern:
                      matched = sorted(glob.glob(pattern))
                      ordered_sqls.extend(matched)

          with open("sql_file_list.txt", "w") as out:
              for path in ordered_sqls:
                  out.write(f"{path}\n")

          # Export as GitHub Action output
          print("::set-output name=sql_list_file::sql_file_list.txt")
          EOF
      - name: Execute SQL files via psql
        run: |
          echo "Running SQL files..."
          while IFS= read -r file; do
            echo " â†’ Executing $file"
            psql "host=${{ env.AZURE_POSTGRES_HOST_NAME }}.postgres.database.azure.com dbname=${{ env.AZURE_POSTGRES_DATABASE_NAME }} user=${{ env.AZURE_POSTGRES_USERNAME }} sslmode=require" -f "$file"
          done < "${{ steps.parse_sql.outputs.sql_list_file }}"
